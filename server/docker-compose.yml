version: "3"

services:

    api-migrate:
      build:
        context: .
        args:
          - uid=${UID}
          - gid=${GID}
      container_name: pmcserver-migrate
      command: migrate
      user: "${UID}:${GID}"
      depends_on:
        db:
          condition: service_healthy
      volumes:
        - ./app:/pmcserver/app
        - ./setup.cfg:/pmcserver/setup.cfg
        - ./tests:/pmcserver/tests
        - ./migrations:/pmcserver/migrations
      env_file:
        - .env

    api:
      build:
        context: .
        args:
          - uid=${UID}
          - gid=${GID}
      container_name: pmcserver
      user: "${UID}:${GID}"
      depends_on:
        pulp-api:
          condition: service_healthy
        db:
          condition: service_healthy
        api-migrate:
          condition: service_completed_successfully
      volumes:
        - ./app:/pmcserver/app
        - ./setup.cfg:/pmcserver/setup.cfg
        - ./tests:/pmcserver/tests
        - ./migrations:/pmcserver/migrations
      ports:
        - "8000:8000"
      env_file:
        - .env

    db:
      image: postgres:13
      container_name: db
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 2s
        timeout: 5s
        retries: 5
      ports:
        - 5432:5432
      volumes:
        - postgres-data:/var/lib/postgresql/data
      env_file:
        - .env

    signer:
      image: signer
      build:
        context: ../signer
      container_name: signer
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8888/status"]
        interval: 5s
        timeout: 1s
        retries: 5
      ports:
        - "8888:8888"
      volumes:
        - ../server/.test.key:/mnt/test.key
      env_file:
        - ../server/.env
      stop_grace_period: 310s

    pulp-migrate:
      image: localhost/pulp:stable
      build:
        context: ../pulp
      container_name: pulp-migrate
      command: pulp-migrate
      depends_on:
        db:
          condition: service_healthy
        api-migrate:
          condition: service_completed_successfully
      volumes:
        - ../pulp/settings.py:/etc/pulp/settings.py
        - ../pulp/.pulp_symmetric_key:/etc/pulp/pulp_symmetric_key
        - pulp_storage:/var/lib/pulp
        - containers:/var/lib/containers
      env_file:
        - .env

    pulp-api:
      image: localhost/pulp:stable
      build:
        context: ../pulp
      container_name: pulp-api
      command: pulp-api
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:24817/pulp/api/v3/status/"]
        interval: 5s
        timeout: 1s
        retries: 30
      depends_on:
        db:
          condition: service_healthy
        pulp-migrate:
          condition: service_completed_successfully
      ports:
        - "8080:24817"
      volumes:
        - ../pulp/settings.py:/etc/pulp/settings.py
        - ../pulp/.pulp_symmetric_key:/etc/pulp/pulp_symmetric_key
        - pulp_storage:/var/lib/pulp
        - containers:/var/lib/containers
      devices:
        - /dev/fuse
      env_file:
        - .env
        - .env.storage

    pulp-worker:
      image: localhost/pulp:stable
      build:
        context: ../pulp
      container_name: pulp-worker
      command: pulp-worker
      depends_on:
        signer:
          condition: service_healthy
        db:
          condition: service_healthy
      volumes:
        - ../pulp/settings.py:/etc/pulp/settings.py
        - ../pulp/.pulp_symmetric_key:/etc/pulp/pulp_symmetric_key
        - ../server/.test.pub:/sign_cli/msopentech.asc  # overwrite the MS OpenTech pub key 
        - pulp_storage:/var/lib/pulp
        - containers:/var/lib/containers
      devices:
        - /dev/fuse
      env_file:
        - .env
        - .env.storage
      stop_grace_period: 310s

    pulp-content:
      image: localhost/pulp:stable
      build:
        context: ../pulp
      container_name: pulp-content
      command: pulp-content
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:24816/"]
        interval: 10s
        timeout: 1s
        retries: 5
      ports:
        - "8081:24816"
      volumes:
        - ../pulp/settings.py:/etc/pulp/settings.py
        - ../pulp/.pulp_symmetric_key:/etc/pulp/pulp_symmetric_key
        - pulp_storage:/var/lib/pulp
        - containers:/var/lib/containers
      devices:
        - /dev/fuse
      env_file:
        - .env
        - .env.storage

    # You do not normally need an nginx container in your dev environment. However if you are
    # testing a scenario where things need to look a _little_ _bit_ more like prod, then you can
    # add it in. `docker compose --profile nginx up -d`
    nginx:
      profiles: ['nginx']
      image: mcr.microsoft.com/cbl-mariner/base/nginx:1
      container_name: nginx
      ports:
        - "8082:8082"  # api
        - "8083:8083"  # content
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8082/nginx_status"]
        interval: 5s
        timeout: 1s
        retries: 5
      volumes:
        - ./dev_assets/nginx.conf:/etc/nginx/nginx.conf.default
      devices:
        - /dev/fuse
      depends_on:
        - api

volumes:
  pulp_storage:
  containers:
  postgres-data:
