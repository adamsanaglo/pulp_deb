From 369dbd06b618ed9ee9cf39bf3f2d89d3b379e1c2 Mon Sep 17 00:00:00 2001
From: Stephen Herr <stephenherr@microsoft.com>
Date: Mon, 28 Nov 2022 17:18:37 -0500
Subject: [PATCH] Specify and remember the Signing Service that should be used
 at Repository or Release creation time.

closes #641
---
 .../0023_upstream_release_override.py         | 35 +++++++
 pulp_deb/app/models/__init__.py               |  2 +-
 pulp_deb/app/models/repository.py             | 36 ++++++--
 .../app/serializers/repository_serializers.py | 91 +++++++++++++++----
 4 files changed, 135 insertions(+), 29 deletions(-)
 create mode 100644 pulp_deb/app/migrations/0023_upstream_release_override.py

diff --git a/pulp_deb/app/migrations/0023_upstream_release_override.py b/pulp_deb/app/migrations/0023_upstream_release_override.py
new file mode 100644
index 0000000..194600d
--- /dev/null
+++ b/pulp_deb/app/migrations/0023_upstream_release_override.py
@@ -0,0 +1,35 @@
+# Generated by Django 3.2.16 on 2023-01-30 21:19
+
+from django.db import migrations, models
+import django.db.models.deletion
+import django_lifecycle.mixins
+import uuid
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('deb', '0020_sourceindex_sourcepackage_sourcepackagereleasecomponent'),
+    ]
+
+    operations = [
+        migrations.RemoveField(
+            model_name='aptrepository',
+            name='signing_service_release_overrides',
+        ),
+        migrations.CreateModel(
+            name='AptRepositoryReleaseServiceOverride',
+            fields=[
+                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
+                ('pulp_created', models.DateTimeField(auto_now_add=True)),
+                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
+                ('release_distribution', models.TextField()),
+                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signing_service_release_overrides', to='deb.aptrepository')),
+                ('signing_service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='deb.aptreleasesigningservice')),
+            ],
+            options={
+                'unique_together': {('repository', 'release_distribution')},
+            },
+            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
+        ),
+    ]
diff --git a/pulp_deb/app/models/__init__.py b/pulp_deb/app/models/__init__.py
index 1779585..017c19d 100644
--- a/pulp_deb/app/models/__init__.py
+++ b/pulp_deb/app/models/__init__.py
@@ -22,4 +22,4 @@ from .publication import AptDistribution, AptPublication, VerbatimPublication
 
 from .remote import AptRemote
 
-from .repository import AptRepository
+from .repository import AptRepository, AptRepositoryReleaseServiceOverride
diff --git a/pulp_deb/app/models/repository.py b/pulp_deb/app/models/repository.py
index 328d0ce..b214cde 100644
--- a/pulp_deb/app/models/repository.py
+++ b/pulp_deb/app/models/repository.py
@@ -1,5 +1,5 @@
 from django.db import models
-from pulpcore.plugin.models import Repository
+from pulpcore.plugin.models import BaseModel, Repository
 from pulpcore.plugin.repo_version_utils import remove_duplicates, validate_version_paths
 
 from pulp_deb.app.models import (
@@ -43,22 +43,23 @@ class AptRepository(Repository):
     signing_service = models.ForeignKey(
         AptReleaseSigningService, on_delete=models.PROTECT, null=True
     )
-    signing_service_release_overrides = models.JSONField(default=dict)
+    # Implicit signing_service_release_overrides
 
     class Meta:
         default_related_name = "%(app_label)s_%(model_name)s"
 
     def release_signing_service(self, release):
         """
-        Resolve and return the Signing Service specified in the overrides if there is one for this
-        release, else return self.signing_service.
+        Return the Signing Service specified in the overrides if there is one for this release,
+        else return self.signing_service.
         """
-        from pulpcore.plugin.viewsets import NamedModelViewSet
-
-        if release.distribution in self.signing_service_release_overrides:
-            url = self.signing_service_release_overrides[release.distribution]
-            return NamedModelViewSet().get_resource(url, AptReleaseSigningService)
-        return self.signing_service
+        if isinstance(release, Release):
+            release = release.distribution
+        try:
+            override = self.signing_service_release_overrides.get(release_distribution=release)
+            return override.signing_service
+        except AptRepositoryReleaseServiceOverride.DoesNotExist:
+            return self.signing_service
 
     def initialize_new_version(self, new_version):
         """
@@ -93,3 +94,18 @@ class AptRepository(Repository):
             if distribution in distributions:
                 raise DuplicateDistributionException(distribution)
             distributions.append(distribution)
+
+
+class AptRepositoryReleaseServiceOverride(BaseModel):
+    """
+    Override the SigningService that a single Release will use in this AptRepository.
+    """
+
+    repository = models.ForeignKey(
+        AptRepository, on_delete=models.CASCADE, related_name="signing_service_release_overrides"
+    )
+    signing_service = models.ForeignKey(AptReleaseSigningService, on_delete=models.PROTECT)
+    release_distribution = models.TextField()
+
+    class Meta:
+        unique_together = (("repository", "release_distribution"),)
diff --git a/pulp_deb/app/serializers/repository_serializers.py b/pulp_deb/app/serializers/repository_serializers.py
index c86aa6b..1f73fcb 100644
--- a/pulp_deb/app/serializers/repository_serializers.py
+++ b/pulp_deb/app/serializers/repository_serializers.py
@@ -1,19 +1,44 @@
 from gettext import gettext as _
+from django.db import transaction
+from pulpcore.plugin.models import SigningService
 from pulpcore.plugin.serializers import (
     RelatedField,
     RepositorySerializer,
     RepositorySyncURLSerializer,
     validate_unknown_fields,
 )
+from pulpcore.plugin.util import get_url
 from pulpcore.plugin.viewsets import NamedModelViewSet
 
-from pulp_deb.app.models import AptReleaseSigningService, AptRepository
+from pulp_deb.app.models import (
+    AptRepositoryReleaseServiceOverride,
+    AptReleaseSigningService,
+    AptRepository,
+)
 
 from jsonschema import Draft7Validator
 from rest_framework import serializers
+from rest_framework.exceptions import ValidationError as DRFValidationError
 from pulp_deb.app.schema import COPY_CONFIG_SCHEMA
 
 
+class ServiceOverrideField(serializers.DictField):
+    child = RelatedField(
+        view_name="signing-services-detail",
+        queryset=AptReleaseSigningService.objects.all(),
+        many=False,
+        required=False,
+        allow_null=True,
+    )
+
+    def to_representation(self, overrides):
+        return {
+            # Cast to parent class so get_url can look up resource url.
+            x.release_distribution: get_url(SigningService(x.signing_service.pk))
+            for x in overrides.all()
+        }
+
+
 class AptRepositorySerializer(RepositorySerializer):
     """
     A Serializer for AptRepository.
@@ -28,12 +53,13 @@ class AptRepositorySerializer(RepositorySerializer):
         required=False,
         allow_null=True,
     )
-    signing_service_release_overrides = serializers.JSONField(
-        required=False,
+    signing_service_release_overrides = ServiceOverrideField(
         default=dict,
+        required=False,
         help_text=_(
             "A dictionary of Release distributions and the Signing Service URLs they should use."
-            'Example: {"bionic": "/pulp/api/v3/signing-services/433a1f70-c589-4413-a803-c50b842ea9b5/"}'
+            "Example: "
+            '{"bionic": "/pulp/api/v3/signing-services/433a1f70-c589-4413-a803-c50b842ea9b5/"}'
         ),
     )
 
@@ -44,20 +70,49 @@ class AptRepositorySerializer(RepositorySerializer):
         )
         model = AptRepository
 
-    def validate(self, data):
-        """
-        Validate that the Serializer contains valid data.
-        Ensure the signing services specified in signing_service_release_overrides exist, or error.
-        """
-        super().validate(data)
-
-        field = "signing_service_release_overrides"
-        if field in data:
-            nmvs = NamedModelViewSet()
-            for _, value in data[field].items():
-                nmvs.get_resource(value, AptReleaseSigningService)
-
-        return data
+    @transaction.atomic
+    def create(self, validated_data):
+        """Create an AptRepository, special handling for signing_service_release_overrides."""
+        overrides = validated_data.pop("signing_service_release_overrides", -1)
+        repo = super().create(validated_data)
+
+        try:
+            self._update_overrides(repo, overrides)
+        except DRFValidationError as exc:
+            repo.delete()
+            raise exc
+        return repo
+
+    def update(self, instance, validated_data):
+        """Update an AptRepository, special handling for signing_service_release_overrides."""
+        overrides = validated_data.pop("signing_service_release_overrides", -1)
+        with transaction.atomic():
+            self._update_overrides(instance, overrides)
+            instance = super().update(instance, validated_data)
+        return instance
+
+    def _update_overrides(self, repo, overrides):
+        """Update signing_service_release_overrides."""
+        if overrides == -1:
+            # Sentinel value, no updates
+            return
+
+        current = {x.release_distribution: x for x in repo.signing_service_release_overrides.all()}
+        # Intentionally only updates items the user specified.
+        for distro, service in overrides.items():
+            if not service and distro in current:  # the user wants to delete this override
+                current[distro].delete()
+            elif service:
+                signing_service = AptReleaseSigningService.objects.get(pk=service)
+                if distro in current:  # update
+                    current[distro] = signing_service
+                    current[distro].save()
+                else:  # create
+                    AptRepositoryReleaseServiceOverride(
+                        repository=repo,
+                        signing_service=signing_service,
+                        release_distribution=distro,
+                    ).save()
 
 
 class AptRepositorySyncURLSerializer(RepositorySyncURLSerializer):
-- 
2.31.1

