## PMC Note: most of this Dockerfile was auto-generated by the ansible build script of 
## pulp-operator (see README). I'm intentionally leaving it mostly as-is, including original
## comments and just commenting out lines that don't work in Mariner instead of deleting them.
## That way it will be more obvious what changes to consider if you were to compare it with a newer
## version of the auto-generated Dockerfile.
FROM mcr.microsoft.com/cbl-mariner/base/python:3.9


# https://superuser.com/questions/959380/how-do-i-install-generate-all-locales-on-fedora
# This may not be necessary anymore because Fedora 30, unlike CentOS 7, has
# glibc subpackages like glibc-langpack-en.
#RUN rm /etc/rpm/macros.image-language-conf
RUN echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONUNBUFFERED=0
ENV DJANGO_SETTINGS_MODULE=pulpcore.app.settings
ENV PULP_SETTINGS=/etc/pulp/settings.py

# The Fedora 30 image already has tsflags=nodocs set in dnf.conf
#
# wget & git are presumably needed for purposes like pip installs from git
#
# libxcrypt-compat is needed by psycopg2-binary from PyPI
#
# python3-psycopg2 is installed by pulp_installer
#
# glibc-langpack-en is needed to provide the en_US.UTF-8 locale, which Pulp
# seems to need.
#
# openssl-devel, python3-devel, and gcc are for testing pulp-certguard
#
# The last 5 lines (before clean) are needed until python3-createrepo_c gets an
# RPM upgrade to 0.15.10. Until then, we install & build it from PyPI.
RUN	tdnf -y update
RUN	tdnf -y install wget git \
					#libxcrypt-compat \
					libpq-devel \
					#python3-psycopg2 \
					#glibc-langpack-en \
					#python3-libmodulemd \
					openldap-devel \
					openssl \
					openssl-devel \
					ostree \
					ostree-libs \
					python3-devel \
					#python3-setuptools \
					#python-pip \
					gcc \
					libmodulemd-devel \
					libcomps-devel \
					ninja-build \
					#'dnf-command(builddep)' \
					cairo-devel \
					cmake \
					gobject-introspection-devel \
					cairo-gobject-devel \
					# Since tdnf doesn't work with builddep plugin we have to install these by hand
					glibc-devel \
					kernel-headers \
					binutils \
					bzip2-devel \
					curl-devel \
					sqlite-devel \
					zchunk-devel \
					file-devel \
					tzdata \
                    patch
#RUN tdnf builddep createrepo_c
RUN	tdnf clean all

# Need to install optional dep, rhsm, for pulp-certguard
RUN pip install  \
	#rhsm \
	setproctitle \
	gunicorn \
	python-nginx \
	"azure-storage-blob<12.14.0" \
	"requests[use_chardet_on_py3]" \
	# A couple more pulp-rpm dependencies
	scikit-build \
	nose

RUN mkdir -p /etc/pulp \
			 /var/lib/pulp/media \
			 /var/lib/pulp/assets \
			 /var/lib/pulp/tmp \
			 /sign_cli

# https://github.com/python-ldap/python-ldap/issues/432#issuecomment-1016756358
#RUN ln -s /usr/lib64/libldap.so /usr/lib64/libldap_r.so

RUN pip install pulpcore==3.22.0  # pin for patches below
RUN pip install pulp-python~=3.8.0
RUN pip install pulp-deb==2.20.0  # pin for patches below
RUN pip install pulp-rpm==3.19.1 # pin for patches below
RUN pip install pulp-file~=1.11.2

# Enable use of cloud storage using vendored clone of github.com/jasonzio/django_storages
COPY container-assets/django_storages /tmp/django_storages
RUN pip install /tmp/django_storages

# Apply our pulpcore patch until pulp_deb orphan cleanup works
# https://github.com/pulp/pulp_deb/issues/690
COPY container-assets/pulpcore /tmp/pulpcore
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulpcore/0001-Exclude-pulp_deb-s-ReleaseFile-from-orphan-cleanup.patch # https://github.com/pulp/pulp_deb/issues/690
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulpcore/0002-Pass-correlation-id-to-signing-script-through-ENV-va.patch # https://github.com/pulp/pulpcore/issues/3522
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulpcore/0003-Redirects-user-to-a-path-that-ends-in.patch # https://github.com/pulp/pulpcore/issues/3173

# Apply our pulp_deb patches until upstream accepts/releases our merge requests
COPY container-assets/pulp_deb /tmp/pulp_deb
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0001-Merged-PRs-6822668-And-6834315-Add-pulp_deb-filters.patch # https://github.com/pulp/pulp_deb/pull/647
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0002-Merged-PR-6941077-Apply-release-fields-feature-to-pu.patch # https://github.com/pulp/pulp_deb/pull/656
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0003-Merged-PR-6950075-Re-apply-pulp_deb-release-field-pa.patch # ^
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0004-Merged-PR-7045448-Preserve-the-names-of-deb-packages.patch # https://github.com/pulp/pulp_deb/issues/696
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0005-Merged-PR-7056189-Fixing-bad-method-call-in-pulp_deb.patch # https://github.com/pulp/pulp_deb/issues/696
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0006-Merged-PR-7057110-Fix-packages-missing-from-Packages.patch # https://github.com/pulp/pulp_deb/pull/675
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0007-Merged-PR-7174904-Sign-all-apt-releases-in-a-repo-co.patch # https://github.com/pulp/pulp_deb/pull/683
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0008-Merged-PR-7224968-Better-control-of-signing-services.patch # https://github.com/pulp/pulp_deb/pull/689
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0009-Prevent-sync-from-breaking-if-a-custom-field-is-blan.patch # https://github.com/pulp/pulp_deb/pull/695
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0010-Store-release-signing-overrides-on-repo-to-avoid-syn.patch # https://github.com/pulp/pulp_deb/pull/689
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0011-Add-repo_key_fields-constraint-to-PackageReleaseComp.patch # https://github.com/pulp/pulp_deb/pull/705
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0012-Initial-source-package-and-source-indices-support.patch # https://github.com/pulp/pulp_deb/pull/295
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_deb/0013-Adding-source-package-release-filter-support.patch

# Apply our pulp_rpm patches until upstream accepts/releases our merge requests
COPY container-assets/pulp_rpm /tmp/pulp_rpm
RUN patch -d /usr/lib/python3.9/site-packages/ -p1 < /tmp/pulp_rpm/0001-Add-a-setting-to-publish-package-repo-timestamp.patch # https://github.com/pulp/pulp_rpm/pull/3010

# In this image the manager is in /usr/bin, not /usr/local/bin
RUN ["ln", "-s", "/usr/bin/pulpcore-manager", "/usr/local/bin/pulpcore-manager"]
COPY container-assets/readyz.py /usr/bin/readyz.py
COPY container-assets/route_paths.py /usr/bin/route_paths.py
COPY container-assets/wait_on_postgres.py /usr/bin/wait_on_postgres.py
COPY container-assets/wait_on_database_migrations.sh /usr/bin/wait_on_database_migrations.sh
COPY container-assets/pulp-common-entrypoint.sh /pulp-common-entrypoint.sh
COPY container-assets/pulp-api /usr/bin/pulp-api
COPY container-assets/pulp-content /usr/bin/pulp-content
#COPY container-assets/pulp-resource-manager /usr/bin/pulp-resource-manager
COPY container-assets/pulp-worker /usr/bin/pulp-worker
COPY container-assets/pulp-migrate /usr/bin/pulp-migrate
COPY container-assets/pmc-secrets-exporter.sh /usr/bin/pmc-secrets-exporter.sh
COPY container-assets/add_signer.sh /usr/bin/add_signer.sh
COPY container-assets/root-cert-bundle.pem /usr/bin/root-cert-bundle.pem
COPY container-assets/gunicorn_access_filter.conf.py /gunicorn_access_filter.conf.py

# Copy over stuff for signing repodata
COPY sign_cli /sign_cli

ENTRYPOINT ["/pulp-common-entrypoint.sh"]
