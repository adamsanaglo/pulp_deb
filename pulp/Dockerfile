## PMC Note: most of this Dockerfile was auto-generated by the ansible build script of 
## pulp-operator (see README). I'm intentionally leaving it mostly as-is, including original
## comments and just commenting out lines that don't work in Mariner instead of deleting them.
## That way it will be more obvious what changes to consider if you were to compare it with a newer
## version of the auto-generated Dockerfile.
FROM mcr.microsoft.com/cbl-mariner/base/python:3.9


# https://superuser.com/questions/959380/how-do-i-install-generate-all-locales-on-fedora
# This may not be necessary anymore because Fedora 30, unlike CentOS 7, has
# glibc subpackages like glibc-langpack-en.
#RUN rm /etc/rpm/macros.image-language-conf
RUN echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONUNBUFFERED=0
ENV DJANGO_SETTINGS_MODULE=pulpcore.app.settings
ENV PULP_SETTINGS=/etc/pulp/settings.py

# The Fedora 30 image already has tsflags=nodocs set in dnf.conf
#
# wget & git are presumably needed for purposes like pip installs from git
#
# libxcrypt-compat is needed by psycopg2-binary from PyPI
#
# python3-psycopg2 is installed by pulp_installer
#
# glibc-langpack-en is needed to provide the en_US.UTF-8 locale, which Pulp
# seems to need.
#
# openssl-devel, python3-devel, and gcc are for testing pulp-certguard
#
# The last 5 lines (before clean) are needed until python3-createrepo_c gets an
# RPM upgrade to 0.15.10. Until then, we install & build it from PyPI.
RUN	tdnf -y update
RUN	tdnf -y install wget git \
					#libxcrypt-compat \
					libpq-devel \
					#python3-psycopg2 \
					#glibc-langpack-en \
					#python3-libmodulemd \
					openldap-devel \
					openssl \
					openssl-devel \
					ostree \
					ostree-libs \
					python3-devel \
					#python3-setuptools \
					#python-pip \
					gcc \
					libmodulemd-devel \
					libcomps-devel \
					ninja-build \
					#'dnf-command(builddep)' \
					cairo-devel \
					cmake \
					gobject-introspection-devel \
					cairo-gobject-devel \
					# Since tdnf doesn't work with builddep plugin we have to install these by hand
					glibc-devel \
					kernel-headers \
					binutils \
					bzip2-devel \
					curl-devel \
					sqlite-devel \
					zchunk-devel \
					file-devel \
					tzdata
#RUN tdnf builddep createrepo_c
RUN	tdnf clean all

# Need to install optional dep, rhsm, for pulp-certguard
RUN pip install  \
	#rhsm \
	setproctitle \
	gunicorn \
    python-nginx \
	"django-storages[boto3,azure]>=1.12.2" \
	"azure-storage-blob<12.10.0" \
	"requests[use_chardet_on_py3]" \
	# A couple more pulp-rpm dependencies
	scikit-build \
	nose

RUN mkdir -p /etc/pulp \
			 /var/lib/pulp/media \
			 /var/lib/pulp/assets \
			 /var/lib/pulp/tmp \
			 /sign_cli

# https://github.com/python-ldap/python-ldap/issues/432#issuecomment-1016756358
#RUN ln -s /usr/lib64/libldap.so /usr/lib64/libldap_r.so

RUN pip install pulpcore
RUN pip install pulp-python
RUN pip install pulp-deb
RUN pip install pulp-rpm

# In this image the manager is in /usr/bin, not /usr/local/bin
RUN ["ln", "-s", "/usr/bin/pulpcore-manager", "/usr/local/bin/pulpcore-manager"]
COPY container-assets/readyz.py /usr/bin/readyz.py
COPY container-assets/route_paths.py /usr/bin/route_paths.py
COPY container-assets/wait_on_postgres.py /usr/bin/wait_on_postgres.py
COPY container-assets/wait_on_database_migrations.sh /usr/bin/wait_on_database_migrations.sh
COPY container-assets/pulp-common-entrypoint.sh /pulp-common-entrypoint.sh
COPY container-assets/pulp-api /usr/bin/pulp-api
COPY container-assets/pulp-content /usr/bin/pulp-content
#COPY container-assets/pulp-resource-manager /usr/bin/pulp-resource-manager
COPY container-assets/pulp-worker /usr/bin/pulp-worker
COPY container-assets/pmc-secrets-exporter.sh /usr/bin/pmc-secrets-exporter.sh

# Copy over stuff for signing repodata
COPY sign_cli /sign_cli

ENTRYPOINT ["/pulp-common-entrypoint.sh"]
